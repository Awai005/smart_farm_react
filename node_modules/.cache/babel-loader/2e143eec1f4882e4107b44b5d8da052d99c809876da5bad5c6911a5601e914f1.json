{"ast":null,"code":"import _objectSpread from\"C:/Users/admin/Desktop/Smart_farm_app/smart-farm/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import axios from\"axios\";import\"./NodeDataVisualizer.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NodeDataVisualizer=()=>{const[nodeData,setNodeData]=useState({1:[],2:[]});const[tankData,setTankData]=useState({1:\"Tank_status\",2:\"Tank_status\"});const[activeTab,setActiveTab]=useState(1);const[error,setError]=useState(\"\");const fetchNodeData=async nodeId=>{setError(\"\");try{const response=await axios.get(\"https://smart-farm-v14p.onrender.com/get_node_data/\".concat(nodeId));if(response.status===200&&response.data.status===\"success\"){setNodeData(prevData=>_objectSpread(_objectSpread({},prevData),{},{[nodeId]:response.data.data}));}else{setError(\"Failed to fetch data for Node \".concat(nodeId));}}catch(err){setError(\"Error fetching data for Node \".concat(nodeId,\": \").concat(err.message));}};const fetchTankData=async nodeId=>{setError(\"\");try{const response=await axios.get(\"https://smart-farm-v14p.onrender.com/tank_data/\".concat(nodeId));if(response.status===200){setTankData(prevData=>_objectSpread(_objectSpread({},prevData),{},{[nodeId]:{water_level:response.data.water_level,timestamp:response.data.timestamp}}));}else{setTankData(prevData=>_objectSpread(_objectSpread({},prevData),{},{[nodeId]:\"Tank_status\"}));}}catch(_unused){setTankData(prevData=>_objectSpread(_objectSpread({},prevData),{},{[nodeId]:\"Tank_status\"}));}};const handleTabClick=nodeId=>{setActiveTab(nodeId);fetchNodeData(nodeId);fetchTankData(nodeId);};return/*#__PURE__*/_jsxs(\"div\",{className:\"node-visualizer\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Latest Five Data points\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:activeTab===1?\"tab active\":\"tab\",onClick:()=>handleTabClick(1),children:\"Node 1\"}),/*#__PURE__*/_jsx(\"button\",{className:activeTab===2?\"tab active\":\"tab\",onClick:()=>handleTabClick(2),children:\"Node 2\"})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:nodeData[activeTab].length>0?/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Timestamp\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Moisture\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Humidity\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Temperature\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pump Status\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:nodeData[activeTab].map((entry,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:entry.timestamp}),/*#__PURE__*/_jsx(\"td\",{children:entry.moisture}),/*#__PURE__*/_jsx(\"td\",{children:entry.humidity}),/*#__PURE__*/_jsx(\"td\",{children:entry.temperature}),/*#__PURE__*/_jsx(\"td\",{children:entry.pump_status})]},index))})]}):/*#__PURE__*/_jsxs(\"p\",{children:[\"No data available for Node \",activeTab]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"tank-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tank Data\"}),typeof tankData[activeTab]===\"string\"?/*#__PURE__*/_jsx(\"p\",{className:\"tank-status\",children:tankData[activeTab]}):/*#__PURE__*/_jsxs(\"div\",{className:\"tank-status\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Level:\"}),\" \",tankData[activeTab].water_level]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Time:\"}),\" \",tankData[activeTab].timestamp]})]})]})]});};export default NodeDataVisualizer;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","NodeDataVisualizer","nodeData","setNodeData","tankData","setTankData","activeTab","setActiveTab","error","setError","fetchNodeData","nodeId","response","get","concat","status","data","prevData","_objectSpread","err","message","fetchTankData","water_level","timestamp","_unused","handleTabClick","className","children","onClick","length","map","entry","index","moisture","humidity","temperature","pump_status"],"sources":["C:/Users/admin/Desktop/Smart_farm_app/smart-farm/src/components/NodeDataVisualizer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./NodeDataVisualizer.css\";\r\n\r\nconst NodeDataVisualizer = () => {\r\n  const [nodeData, setNodeData] = useState({ 1: [], 2: [] });\r\n  const [tankData, setTankData] = useState({ 1: \"Tank_status\", 2: \"Tank_status\" });\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetchNodeData = async (nodeId) => {\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.get(`https://smart-farm-v14p.onrender.com/get_node_data/${nodeId}`);\r\n      if (response.status === 200 && response.data.status === \"success\") {\r\n        setNodeData((prevData) => ({ ...prevData, [nodeId]: response.data.data }));\r\n      } else {\r\n        setError(`Failed to fetch data for Node ${nodeId}`);\r\n      }\r\n    } catch (err) {\r\n      setError(`Error fetching data for Node ${nodeId}: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const fetchTankData = async (nodeId) => {\r\n    setError(\"\");\r\n    try {\r\n      const response = await axios.get(`https://smart-farm-v14p.onrender.com/tank_data/${nodeId}`);\r\n      if (response.status === 200) {\r\n        setTankData((prevData) => ({\r\n          ...prevData,\r\n          [nodeId]: {\r\n            water_level: response.data.water_level,\r\n            timestamp: response.data.timestamp,\r\n          },\r\n        }));\r\n      } else {\r\n        setTankData((prevData) => ({ ...prevData, [nodeId]: \"Tank_status\" }));\r\n      }\r\n    } catch {\r\n      setTankData((prevData) => ({ ...prevData, [nodeId]: \"Tank_status\" }));\r\n    }\r\n  };\r\n\r\n  const handleTabClick = (nodeId) => {\r\n    setActiveTab(nodeId);\r\n    fetchNodeData(nodeId);\r\n    fetchTankData(nodeId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"node-visualizer\">\r\n      <h2>Latest Five Data points</h2>\r\n\r\n      <div className=\"tabs\">\r\n        <button\r\n          className={activeTab === 1 ? \"tab active\" : \"tab\"}\r\n          onClick={() => handleTabClick(1)}\r\n        >\r\n          Node 1\r\n        </button>\r\n        <button\r\n          className={activeTab === 2 ? \"tab active\" : \"tab\"}\r\n          onClick={() => handleTabClick(2)}\r\n        >\r\n          Node 2\r\n        </button>\r\n      </div>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <div className=\"table-container\">\r\n        {nodeData[activeTab].length > 0 ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Timestamp</th>\r\n                <th>Moisture</th>\r\n                <th>Humidity</th>\r\n                <th>Temperature</th>\r\n                <th>Pump Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {nodeData[activeTab].map((entry, index) => (\r\n                <tr key={index}>\r\n                  <td>{entry.timestamp}</td>\r\n                  <td>{entry.moisture}</td>\r\n                  <td>{entry.humidity}</td>\r\n                  <td>{entry.temperature}</td>\r\n                  <td>{entry.pump_status}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>No data available for Node {activeTab}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"tank-container\">\r\n        <h3>Tank Data</h3>\r\n        {typeof tankData[activeTab] === \"string\" ? (\r\n            <p className=\"tank-status\">{tankData[activeTab]}</p>\r\n        ) : (\r\n            <div className=\"tank-status\">\r\n            <p>\r\n                <strong>Level:</strong> {tankData[activeTab].water_level}\r\n            </p>\r\n            <p>\r\n                <strong>Time:</strong> {tankData[activeTab].timestamp}\r\n            </p>\r\n            </div>\r\n        )}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NodeDataVisualizer;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}